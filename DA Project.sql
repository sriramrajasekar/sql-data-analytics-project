	CREATE DATABASE ecom_analytics;
	USE ecom_analytics;

	-- Customers Table
	CREATE TABLE customers (
		customer_id INT PRIMARY KEY,
		first_name VARCHAR(50),
		last_name VARCHAR(50),
		gender VARCHAR(10),
		age INT,
		location VARCHAR(100),
		signup_date DATE
	);

	-- Products Table
	CREATE TABLE products (
		product_id INT PRIMARY KEY,
		product_name VARCHAR(100),
		category VARCHAR(50),
		sub_category VARCHAR(50),
		brand VARCHAR(50),
		cost_price DECIMAL(10,2),
		selling_price DECIMAL(10,2)
	);

	-- Orders Table
	CREATE TABLE orders (
		order_id INT PRIMARY KEY,
		customer_id INT,
		product_id INT,
		order_date DATE,
		quantity INT,
		region VARCHAR(50),
		FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
		FOREIGN KEY (product_id) REFERENCES products(product_id)
	);
    select * from orders;

	INSERT INTO customers VALUES
	(1, 'Anjali', 'Sharma', 'Female', 28, 'Mumbai', '2023-01-12'),
	(2, 'Ravi', 'Kumar', 'Male', 34, 'Delhi', '2023-03-22'),
	(3, 'Priya', 'Verma', 'Female', 25, 'Bangalore', '2023-05-10'),
	(4, 'Arun', 'Singh', 'Male', 41, 'Chennai', '2023-07-18'),
	(5, 'Neha', 'Patel', 'Female', 30, 'Hyderabad', '2023-09-05');


	INSERT INTO products VALUES
	(101, 'iPhone 14', 'Electronics', 'Smartphones', 'Apple', 65000, 78000),
	(102, 'Galaxy S22', 'Electronics', 'Smartphones', 'Samsung', 58000, 72000),
	(103, 'ThinkPad X1', 'Electronics', 'Laptops', 'Lenovo', 85000, 95000),
	(104, 'AirPods Pro', 'Electronics', 'Accessories', 'Apple', 18000, 22000),
	(105, 'Sony WH-1000XM5', 'Electronics', 'Headphones', 'Sony', 25000, 29000);


	INSERT INTO orders VALUES
	(201, 1, 101, '2023-01-20', 1, 'West'),
	(202, 2, 102, '2023-03-25', 2, 'North'),
	(203, 3, 104, '2023-06-12', 1, 'South'),
	(204, 1, 105, '2023-09-14', 1, 'West'),
	(205, 4, 103, '2023-12-05', 1, 'South'),
	(206, 5, 102, '2024-01-11', 1, 'Central'),
	(207, 3, 105, '2024-02-18', 1, 'South'),
	(208, 2, 101, '2024-03-05', 1, 'North');

1. Total Revenue Generated;
	SELECT SUM(p.selling_price * o.quantity) AS total_revenue
	FROM orders o JOIN products p 
	ON o.product_id = p.product_id;

2. Top 3 Selling Products by Revenue;
	   select p.product_name , sum(o.quantity) as total_sold_unit, sum(p.selling_price * o.quantity) as revenue
       from products p join orders o
       on p.product_id = o.product_id
       group by p.product_name
       order by revenue
       desc limit 3;
       
3. Revenue by Region;
 select region, sum(p.selling_price * o.quantity) as revenue
 from orders o join products p
 on p.product_id = o.product_id
 group by o.region
 order by revenue desc;

4. Top Customers by Total Spend;
select first_name ,last_name , sum(o.quantity * p.selling_price) as total_spend
from customers c join orders o
on c.customer_id= o.customer_id
join products p on p.product_id= o.product_id
group by c.customer_id
order by total_spend desc;

5. Monthly Sales Trend (Year-wise);
select sum(p.selling_price * o.quantity) as Total_sales , year(order_date) as Year,month(order_date) as month
from orders o join products p
on p.product_id= o.product_id
group by year(order_date),month(order_date)
order by year,month;


6. Which region generated the highest sales revenue?;

select region, sum(selling_price * quantity ) as revenue 
from orders o join products p 
on o.product_id=p.product_id
group by o.region 
order by revenue
desc limit 1;


7.Who are the top 2 customers by total spend?;
select first_name, last_name , sum( selling_price * quantity ) as total_spend
from customers c join orders o
on c.customer_id = o.customer_id
join products p on p.product_id = o.product_id
group by c.customer_id
order by total_spend
desc limit 2;

8.Most Popular Product Category
select category , sum(quantity) as Total_sold_unit from products p join orders o
on p.product_id= o.product_id
group by p.category
order by total_sold_unit;

9.Profit Generated by Each Product
select product_name, sum( (selling_price - cost_price) * quantity) as Product_profit 
from products p join orders o 
on p.product_id = o.product_id 
group by p.product_name 
order by product_profit
desc 	; 

10.New Customers Acquired by Month;
select month (signup_date) as month, count(*) as new_customers from customers c
group by signup_date
order by month;


